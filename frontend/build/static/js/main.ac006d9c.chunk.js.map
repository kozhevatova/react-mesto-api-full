{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Spinner.js","components/Main.js","components/Footer.js","components/ImagePopup.js","utils/api.js","components/FormValidator.js","utils/constants.js","components/PopupWithForm.js","utils/utils.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ConfirmDeletePopup.js","components/ProtectedRoute.js","components/Login.js","components/Register.js","images/check.svg","images/wrong.svg","components/InfoTooltip.js","utils/auth.js","components/HamburgerInfo.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","handleHamburgerClick","isHamburgerClicked","isRegisterOpen","handleRegisterOpen","handleLogout","isLoggedIn","email","path","className","to","onClick","type","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","alt","name","src","link","aria-label","length","Spinner","Main","cards","onEditProfile","onAddPlace","onEditAvatar","isLoading","style","background","avatar","about","map","Footer","id","Date","getFullYear","ImagePopup","onClose","api","options","this","baseUrl","res","ok","json","Promise","reject","Error","status","jwt","fetch","headers","authorization","then","_getResponseData","newName","newInfo","method","body","JSON","stringify","cardId","_addLike","_deleteLike","FormValidator","data","formElement","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_errorSelector","errorSelector","_formElement","_button","querySelector","_inputList","Array","from","querySelectorAll","input","errorMessage","error","classList","add","textContent","remove","validity","valid","_hideInputError","_showInputError","validationMessage","removeAttribute","setAttribute","_hasInvalidInput","_disableButton","_enableButton","forEach","addEventListener","_handleReset","_checkInputValidity","toggleButtonState","_setEventListenersForReset","popupName","popupDescription","loginEmail","loginPassword","validationConfig","PopupWithForm","props","formRef","useRef","useEffect","form","formValidator","enableValidation","validateForm","current","isOpen","onSubmit","ref","title","children","disabled","buttonTitle","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","handleInputChange","e","target","value","console","log","preventDefault","placeholder","required","minLength","maxLength","onChange","EditAvatarPopup","onUpdateAvatar","inputRef","AddPlacePopup","setLink","ConfirmDeletePopup","ProtectedRoute","Component","component","Login","handleLogin","setEmail","password","setPassword","event","pattern","Register","handleRegister","InfoTooltip","isValid","check","wrong","BASE_URL","HamburgerInfo","App","setCurrentUser","setCards","selectedCard","setSelectedCard","setIsLoading","cardToDelete","setCardToDelete","setIsLoggedIn","setIsHamburgerClicked","setIsRegisterOpen","isRegisterValid","setIsRegisterValid","currentEmail","setCurrentEmail","isEditProfileFormOpen","setIsEditProfileFormOpen","isAddPlaceFormOpen","setIsAddPlaceFormOpen","isEditAvatarFormOpen","setIsEditAvatarFormOpen","isConfirmDeleteFormOpen","setIsConfirmDeleteFormOpen","isInfoPopupOpen","setIsInfoPopupOpen","history","useHistory","localStorage","getItem","all","getUserInfo","getInitialCards","values","userInfo","initialCards","catch","err","finally","token","push","handleTokenCheck","handleEscClose","key","closeAllPopups","handleCLosePopupByClickOnOverlay","currentTarget","setEscListener","document","removeEventListener","removeItem","Provider","exact","auth","setItem","changeLikeCardStatus","newCard","newCards","c","newPlace","addNewCard","deleteCard","filter","newAvatar","editAvatar","info","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.ac006d9c.chunk.js","sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst Header = ({ handleHamburgerClick, isHamburgerClicked, isRegisterOpen,\n    handleRegisterOpen, handleLogout, isLoggedIn, email }) => {\n    const path = (\n        `${isRegisterOpen ? \"/sign-in\" : \"/sign-up\"}`\n    );\n\n    return (\n        <header className=\"header\">\n            <div className=\"header__logo\"></div>\n            {\n                isLoggedIn ?\n                    <div className=\"header__email-container\">\n                        <p className=\"header__email\">{email}</p>\n                        <NavLink to=\"/sign-in\" className=\"header__button\" onClick={handleLogout}>\n                            Выйти\n                        </NavLink>\n                    </div> :\n                    <NavLink to={path} className=\"header__button\" onClick={handleRegisterOpen}>\n                        {isRegisterOpen ? 'Войти' : 'Регистрация'}\n                    </NavLink>\n            }\n            {\n                isLoggedIn && (isHamburgerClicked ?\n                    <button className=\"header__close-button\" type=\"button\" onClick={handleHamburgerClick}></button> :\n                    <button className=\"header__hamburger\" type=\"button\" onClick={handleHamburgerClick}></button>)\n\n            }\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext();","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst Card = ({ card, onCardClick, onCardLike, onCardDelete }) => {\n    const currentUser = useContext(CurrentUserContext);\n\n    //определение является ли текущий пользователь владельцем карточки\n    const isOwn = card.owner === currentUser._id;\n    const cardDeleteButtonClassName = (\n        `element__delete-button ${isOwn ?\n            'element__delete-button_visible' :\n            'element__delete-button_hidden'}`\n    );\n\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some((i) => i === currentUser._id);\n    const cardLikeButtonClassName = (\n        `element__like ${isLiked ?\n            'element__like_active' :\n            'element__like_inactive'}`\n    );\n\n    const handleClick = () => {\n        onCardClick(card);\n    }\n\n    const handleLikeClick = () => {\n        onCardLike(card);\n    }\n\n    const handleDeleteClick = () => {\n        onCardDelete(card);\n    }\n\n    return (\n        <li className=\"element\">\n            <img alt={card.name} className=\"element__image\" src={card.link} onClick={handleClick} />\n            <div className=\"element__title\">\n                <h2 className=\"element__place-name\">{card.name}</h2>\n                <div className=\"element__like-container\">\n                    <button className={cardLikeButtonClassName} type=\"button\" aria-label=\"Поставить лайк.\"\n                        onClick={handleLikeClick}></button>\n                    <p className=\"element__like-num\">{card.likes.length}</p>\n                </div>\n            </div>\n\n            <button className={cardDeleteButtonClassName} type=\"button\" aria-label=\"Удалить фото.\"\n                onClick={handleDeleteClick}></button>\n        </li>\n    );\n}\n\nexport default Card;","const Spinner = () => {\n  return <div className=\"spinner\" />;\n}\n\nexport default Spinner;","import { useContext } from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport Card from './Card';\nimport Spinner from './Spinner';\n\nconst Main = ({ cards, onEditProfile, onAddPlace, onEditAvatar,\n  onCardClick, onCardLike, onCardDelete, isLoading }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__avatar\" style={{ background: `center/cover url(${currentUser.avatar}) no-repeat` }}>\n          <button className=\"profile__edit-avatar-button\"\n            onClick={onEditAvatar}></button>\n        </div>\n        <div className=\"profile__info\">\n          <div className=\"profile__title\">\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\n            <button className=\"profile__edit-button\" type=\"button\"\n              aria-label=\"Редактировать профиль.\" onClick={onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n        <button className=\"profile__add-button\" type=\"button\"\n          aria-label=\"Добавить фотографию.\" onClick={onAddPlace}></button>\n      </section>\n\n      <div>\n        <ul className=\"elements\">\n          {isLoading && <Spinner />}\n          {\n            cards.map((card) => {\n              return (\n                <Card card={card} key={card._id} onCardClick={onCardClick} onCardLike={onCardLike}\n                  onCardDelete={onCardDelete} />\n              );\n            })\n          }\n        </ul>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;","const Footer = () => {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; <span id=\"year\">{new Date().getFullYear()}</span> Mesto Russia</p>\n        </footer>\n    );\n}\n\nexport default Footer;","const ImagePopup = ({ card, onClose, onClick }) => {\n  return (\n    <div className={`popup popup_type_zoomed-image ${(card && 'popup_opened')}`} onClick={onClick}>\n      <div className=\"popup__form popup__form_type_zoomed-image\">\n        <img src={card ? card.link : ''} alt={card ? card.name : ''} className=\"popup__image\" />\n        <p className=\"popup__name popup__name_place_zoomed-image\">{card ? card.name : ''}</p>\n        <button className=\"popup__close-button\" type=\"reset\" onClick={onClose}></button>\n      </div>\n    </div>\n  );\n}\n\nexport default ImagePopup;","class Api {\n  constructor(options) {\n    this.baseUrl = options.baseUrl;\n  }\n\n  _getResponseData(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(new Error(`Ошибка: ${res.status}`));\n  }\n\n  getInitialCards(jwt) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    }).then((res) => this._getResponseData(res));\n  }\n\n  getUserInfo(jwt) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      }\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  setUserInfo(newName, newInfo, jwt) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        name: newName,\n        about: newInfo\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  addNewCard(name, link, jwt) {\n    return fetch(`${this.baseUrl}/cards`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        name: name,\n        link: link\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _addLike(cardId, jwt) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'PUT',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  _deleteLike(cardId, jwt) {\n    return fetch(`${this.baseUrl}/cards/${cardId}/likes`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n    return isLiked ? this._addLike(cardId,jwt) : this._deleteLike(cardId,jwt);\n  }\n\n  deleteCard(cardId, jwt) {\n    return fetch(`${this.baseUrl}/cards/${cardId}`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'DELETE',\n    })\n      .then((res) => this._getResponseData(res));\n  }\n\n  editAvatar(avatar, jwt) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      headers: {\n        authorization: `Bearer ${jwt}`,\n        'Content-Type': 'application/json'\n      },\n      method: 'PATCH',\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    })\n      .then((res) => this._getResponseData(res));\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://api.annakin.students.nomoreparties.space',\n});\n\nexport default api;","class FormValidator {\n  constructor(data, formElement) {\n    this._inputSelector = data.inputSelector;\n    this._submitButtonSelector = data.submitButtonSelector;\n    this._inactiveButtonClass = data.inactiveButtonClass;\n    this._inputErrorClass = data.inputErrorClass;\n    this._errorClass = data.errorClass;\n    this._errorSelector = data.errorSelector;\n    this._formElement = formElement;\n    this._button = formElement.querySelector(data.submitButtonSelector);\n    this._inputList = Array.from(formElement.querySelectorAll(data.inputSelector));\n  }\n\n  // отображение ошибки ввода\n  _showInputError(input, errorMessage) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.add(this._inputErrorClass);\n    error.textContent = errorMessage; \n    error.classList.add(this._errorClass);\n  }\n\n  // удаление ошибки ввода\n  _hideInputError(input) {\n    const error = this._formElement.querySelector(`#${input.id}-error`);\n    input.classList.remove(this._inputErrorClass);\n    error.textContent = '';\n    error.classList.remove(this._errorClass);\n  }\n\n  // проверка валидности ввода\n  _checkInputValidity(input) {\n    if (!input.validity.valid) {\n      this._showInputError(input, input.validationMessage);\n    } else {\n      this._hideInputError(input);\n    }\n  }\n\n  // сделать кнопку активной\n  _enableButton() {\n    this._button.classList.remove(this._inactiveButtonClass);\n    this._button.removeAttribute('disabled');\n  }\n\n  // сделать кнопку неактивной\n  _disableButton() {\n    this._button.classList.add(this._inactiveButtonClass);\n    this._button.setAttribute('disabled', 'true');\n  }\n\n  // проверка наличия хотя бы одного неверного ввода\n  _hasInvalidInput() {\n    return this._inputList.some((input) => !input.validity.valid);\n  }\n\n  // изменение активности submit кнопки\n  toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._disableButton();\n    } else {\n      this._enableButton();\n    }\n  }\n\n  // удаление ошибки ввода при закрытии формы\n  _handleReset() {\n    this._inputList.forEach((input) => {\n      this._hideInputError(input);\n    });\n  }\n\n  _setEventListenersForReset() {\n    this._formElement.addEventListener('reset', () => {\n      this._handleReset();\n    });\n  }\n\n  // настройка валидации\n  enableValidation() {\n    this._inputList.forEach((input) => {\n      input.addEventListener('input', () => {\n        this._checkInputValidity(input);\n        this.toggleButtonState();\n      });\n    });\n\n    this._setEventListenersForReset();\n  }\n}\n\nexport default FormValidator;\n","const popupName = 'popupName';\nconst popupDescription = 'popupDescription';\nconst loginEmail = 'loginEmail';\nconst loginPassword = 'loginPassword';\n\nconst validationConfig = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__button',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_active',\n  errorSelector: '.popup__input-error',\n};\n\nexport { popupDescription, popupName, validationConfig, loginEmail, loginPassword } ;","import { useEffect, useRef } from \"react\";\nimport { validateForm } from '../utils/utils';\n\nconst PopupWithForm = (props) => {\n  const formRef = useRef();\n\n  useEffect(() => {\n    validateForm(formRef.current).enableValidation();\n  }, []);\n\n  return (\n    <div className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`} onClick={props.onClick}>\n      <form className={`popup__form popup__form_type_${props.name}`} method=\"POST\" name={props.name}\n        onSubmit={props.onSubmit} ref={formRef} >\n        <button className=\"popup__close-button\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={props.onClose}></button>\n        <h3 className=\"popup__title\">{props.title}</h3>\n        {props.children}\n        <button type=\"submit\" className={`popup__save-button popup__button\n          ${(!(props.name === 'delete-confirm') && props.isOpen) && 'popup__button_disabled'}`}\n          disabled={!(props.name === 'delete-confirm') && props.isOpen}\n        >{props.buttonTitle}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;","import FormValidator from '../components/FormValidator';\nimport { validationConfig } from './constants';\n\n// включить валидацию формы\nconst validateForm = (form) => {\n  const formValidator = new FormValidator(validationConfig, form);\n  formValidator.enableValidation();\n  return formValidator;\n};\n\nexport { validateForm };","import React, { useContext, useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nconst EditProfilePopup = ({ isOpen, onClose, onUpdateUser, isLoading, onClick }) => {\n  const currentUser = useContext(CurrentUserContext);\n\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  \n  //присвоение полям попапа значений и при открытии попапа, и при изменении данных пользователя\n  useEffect(() => {\n    if (isOpen) {\n      setName(currentUser.name);\n      setDescription(currentUser.about);\n    }\n  }, [currentUser, isOpen]);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setDescription(e.target.value);\n        break;\n      default: \n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    //отправка данных в API \n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"edit-form\" title=\"Редактировать профиль\" buttonTitle={isLoading ? 'Сохранение...' : 'Сохранить'}\n      isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} onClick={onClick}>\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Имя\" required id=\"name-input\" minLength=\"2\" maxLength=\"40\"\n        onChange={handleInputChange} value={name} />\n      <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n      <input type=\"text\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"О себе\" required id=\"description-input\" minLength=\"2\" maxLength=\"200\"\n        onChange={handleInputChange} value={description} />\n      <span className=\"popup__input-error\" id=\"description-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditProfilePopup;","import { useEffect, useRef } from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nconst EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar, isLoading, onClick}) => {\n  const inputRef = useRef();\n\n  //очистка поля ввода при открытии попапа\n  useEffect(() => {\n    if(isOpen) {\n      inputRef.current.value = '';\n    }\n  }, [isOpen]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    \n    //отправка данных в API\n    onUpdateAvatar({\n      avatar: inputRef.current.value\n    })\n  }\n\n  return (\n    <PopupWithForm name=\"edit-avatar\" title=\"Обновить аватар\" buttonTitle={isLoading ? \n      \"Сохранение...\" : \"Сохранить\"} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit} \n      onClick={onClick} >\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"avatarUrl\"\n        placeholder=\"Ссылка на аватар\" required id=\"avatar-input\" ref={inputRef}/>\n      <span className=\"popup__input-error\" id=\"avatar-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;","import { useEffect, useState } from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { popupName, popupDescription } from '../utils/constants';\n\nconst AddPlacePopup = ({ isOpen, onClose, onAddPlace, isLoading, onClick }) => {\n  const [name, setName] = useState('');\n  const [link, setLink] = useState('');\n\n  useEffect(() => {\n    //очистка полей ввода при открытии попапа\n    if (isOpen) {\n      setName('');\n      setLink('');\n    }\n\n  }, [isOpen]);\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case popupName: setName(e.target.value);\n        break;\n      case popupDescription: setLink(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleAddPlaceSubmit = (e) => {\n    e.preventDefault();\n\n    //отправка данных в API\n    onAddPlace({\n      name,\n      link\n    });\n  }\n\n  return (\n    <PopupWithForm name=\"add-form\" title=\"Новое место\" buttonTitle={isLoading ?\n      \"Создание...\" : \"Создать\"} isOpen={isOpen} onClose={onClose} onSubmit={handleAddPlaceSubmit}\n      onClick={onClick} >\n      <input type=\"text\" className=\"popup__input popup__name\" name=\"popupName\"\n        placeholder=\"Название\" required id=\"title-input\" minLength=\"2\" maxLength=\"30\"\n        value={name} onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"title-input-error\"></span>\n      <input type=\"url\" className=\"popup__input popup__description\" name=\"popupDescription\"\n        placeholder=\"Ссылка на картинку\" required id=\"url-input\" value={link}\n        onChange={handleInputChange} />\n      <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n    </PopupWithForm>\n  );\n}\n\nexport default AddPlacePopup;","import PopupWithForm from './PopupWithForm';\n\nconst ConfirmDeletePopup = ({isOpen, onClose, onCardDelete, isLoading, card, onClick}) => {\n  const handleCardDelete = (e) => {\n    e.preventDefault();\n    onCardDelete(card);\n  }\n  return (\n    <PopupWithForm name=\"delete-confirm\" title=\"Вы уверены?\" buttonTitle={isLoading ?\n    \"Удаление...\" : \"Да\"} isOpen={isOpen} onClose={onClose} onSubmit={handleCardDelete} \n    onClick={onClick} />\n  );\n}\n\nexport default ConfirmDeletePopup;","import { Redirect, Route } from \"react-router-dom\";\n\nconst ProtectedRoute = ({ component: Component, ...props }) => {\n  return (\n    <Route>\n      {\n        () => props.isLoggedIn ?\n          <Component {...props} /> :\n          <Redirect to=\"./sign-in\" />\n      }\n    </Route>\n  );\n}\n\nexport default ProtectedRoute;","import { useState } from \"react\";\nimport { loginEmail, loginPassword } from '../utils/constants';\n\nconst Login = ({ handleLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case loginEmail: setEmail(e.target.value);\n        break;\n      case loginPassword: setPassword(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(!email || !password) {\n      return;\n    }\n    handleLogin(email,password);\n  }\n\n  return (\n    <div className=\"login\">\n      <h2 className=\"login__title\">Вход</h2>\n      <form className=\"login__form\" method=\"POST\" onSubmit={handleSubmit}>\n        <input className=\"login__input login__email\" type=\"email\" name=\"loginEmail\" placeholder=\"Email\" \n        required id=\"email-input\" value={email} onChange={handleInputChange}\n        pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[a-z]{2,})\\b\"\n        ></input>\n        <input className=\"login__input login__password\" type=\"password\" name=\"loginPassword\" placeholder=\"Пароль\" required\n          id=\"password-input\" value={password} onChange={handleInputChange}></input>\n        <button className=\"login__submit-button\" type=\"submit\">Войти</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { loginEmail, loginPassword } from '../utils/constants';\n\nconst Register = ({ handleRegisterOpen, handleRegister }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  //запись в стейт текущие значения инпутов при вводе\n  const handleInputChange = (e) => {\n    switch (e.target.name) {\n      case loginEmail: setEmail(e.target.value);\n        break;\n      case loginPassword: setPassword(e.target.value);\n        break;\n      default:\n        console.log(`Нет такого инпута: ${e.target.name}`);\n        break;\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (!email || !password) {\n      return;\n    }\n    handleRegister(email,password);\n  }\n\n  return (\n    <div className=\"login login_type_register\">\n      <h2 className=\"login__title\">Регистрация</h2>\n      <form className=\"login__form\" method=\"POST\" onSubmit={handleSubmit}>\n        <input className=\"login__input login__email\" type=\"email\" name=\"loginEmail\" placeholder=\"Email\"\n          required id=\"email-input\" value={email} onChange={handleInputChange}\n          pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+(?:[a-z]{2,})\\b\"\n        ></input>\n        <input className=\"login__input login__password\" type=\"password\" name=\"loginPassword\" placeholder=\"Пароль\"\n          required id=\"password-input\" value={password} onChange={handleInputChange}></input>\n        <button className=\"login__submit-button\" type=\"submit\">Зарегистрироваться</button>\n        <p className=\"login__text\">Уже зарегистрированы?\n          <NavLink to=\"/sign-in\" className=\"login__link\" onClick={handleRegisterOpen}>Войти</NavLink>\n        </p>\n      </form>\n    </div>\n  );\n}\n\nexport default Register;","export default __webpack_public_path__ + \"static/media/check.e004e6e7.svg\";","export default __webpack_public_path__ + \"static/media/wrong.471086c8.svg\";","import check from '../images/check.svg';\nimport wrong from '../images/wrong.svg';\n\nconst InfoTooltip = ({ isOpen, isValid, onClose }) => {\n  return (\n    <div className={`popup popup_type_info ${isOpen && 'popup_opened'}`}>\n      <div className=\"popup__form popup__form_type_info\">\n        <button className=\"popup__close-button popup__close-button_type_info\" type=\"reset\"\n          aria-label=\"Закрыть форму.\" onClick={onClose}></button>\n        <img className=\"popup__status-image\" src={isValid ? check : wrong} alt=\"Статус регистрации.\" />\n        <p className=\"popup__text\">{isValid ? 'Вы успешно зарегистрировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoTooltip;","export const BASE_URL = \"https://api.annakin.students.nomoreparties.space\";\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n     email, password\n    })\n  })\n    .then((res) => {\n      try {\n        if(res.status === 200) {\n          return res.json();\n        }\n      } catch(err) {\n        return err;\n      }\n    })\n    .then((res) => {\n      return res;\n    });\n}\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      \"email\": email,\n      \"password\": password\n    })\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        return data;\n      }\n    });\n}\n\nexport const checkToken = (token) => {\n  return fetch(`${BASE_URL}/users/me`,{\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\" : `Bearer ${token}`\n    }\n  })\n  .then((res) => res.json())\n  .then((data) => data);\n}","import { NavLink } from \"react-router-dom\"\n\nconst HamburgerInfo = ({ email, handleLogout }) => {\n  return (\n    <div className=\"info\">\n      <p className=\"info__email\">{email}</p>\n      <NavLink className=\"info__link\" to=\"/sign-in\" onClick={handleLogout}>Выйти</NavLink>\n    </div>\n  );\n}\n\nexport default HamburgerInfo;","import React, { useState, useEffect } from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport ImagePopup from './ImagePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport ConfirmDeletePopup from './ConfirmDeletePopup';\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport ProtectedRoute from './ProtectedRoute';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport * as auth from '../utils/auth';\nimport HamburgerInfo from './HamburgerInfo';\n\nfunction App() {\n  //#region стейты\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [cardToDelete, setCardToDelete] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isHamburgerClicked, setIsHamburgerClicked] = useState(false);\n  const [isRegisterOpen, setIsRegisterOpen] = useState(false);\n  const [isRegisterValid, setIsRegisterValid] = useState(false);\n  const [currentEmail, setCurrentEmail] = useState('');\n\n  //стейты для открытия/закрытия попапов\n  const [isEditProfileFormOpen, setIsEditProfileFormOpen] = useState(false);\n  const [isAddPlaceFormOpen, setIsAddPlaceFormOpen] = useState(false);\n  const [isEditAvatarFormOpen, setIsEditAvatarFormOpen] = useState(false);\n  const [isConfirmDeleteFormOpen, setIsConfirmDeleteFormOpen] = useState(false);\n  const [isInfoPopupOpen, setIsInfoPopupOpen] = useState(false);\n\n  const history = useHistory();\n\n  //#endregion\n\n  //#region эффекты\n  //получение данных о пользователе с сервера и присвоение этих данных контексту\n  useEffect(() => {\n    setIsLoading(true);\n    const jwt = localStorage.getItem('jwt');\n    if(isLoggedIn) {\n      Promise.all([\n      api.getUserInfo(jwt),\n      api.getInitialCards(jwt)\n    ])\n      .then((values) => {\n        const [userInfo, initialCards] = values;\n        setCurrentUser(userInfo);\n        setCards(initialCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n    }\n  }, [isLoggedIn]);\n\n  useEffect(() => {\n    const handleTokenCheck = () => {\n      if (localStorage.getItem('jwt')) {\n        const jwt = localStorage.getItem('jwt');\n        auth.checkToken(jwt)\n          .then((res) => {\n            if (res) {\n              setCurrentEmail(res.email);\n              setIsLoggedIn(true);\n              history.push('/');\n            }\n          })\n          .catch((err) => console.log(err));\n      }\n    }\n    handleTokenCheck();\n  }, [history]);\n\n  //#endregion\n\n  //#region обработчики событий\n  //добавление карточки\n  const handleAddPlace = (newPlace) => {\n    setIsLoading(true);\n    const jwt = localStorage.getItem('jwt');\n    api.addNewCard(newPlace.name, newPlace.link, jwt)\n      .then((newPlace) => {\n        setCards([newPlace, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //лайк\n  const handleCardLike = (card) => {\n    const jwt = localStorage.getItem('jwt');\n\n    //определение есть ли у карточки лайк, поставленный текущим пользователем\n    const isLiked = card.likes.some(i => i === currentUser._id);\n\n    //отправка запроса в API и получение обновленных данных карточки\n    api.changeLikeCardStatus(card._id, !isLiked, jwt)\n      .then((newCard) => {\n        //формирование нового массива на основе имеющегося, \n        //поставляя в него новую карточку\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n        setCards(newCards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //удаление карточки\n  const handleCardDelete = (card) => {\n    setIsLoading(true);\n    const jwt = localStorage.getItem('jwt');\n    api.deleteCard(card._id, jwt)\n      .then(() => {\n        const newCards = cards.filter((c) => c._id !== card._id);\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }\n\n  //обработчик закрытия по нажатию Esc\n  const handleEscClose = (event) => {\n    if (event.key === 'Escape') {\n      closeAllPopups();\n    }\n  }\n\n  //обработчик закрытия попапов при нажатии по фону\n  const handleCLosePopupByClickOnOverlay = (event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    closeAllPopups();\n  }\n\n  const setEscListener = () => {\n    document.addEventListener('keydown', handleEscClose);\n  }\n\n  const removeEscListener = () => {\n    document.removeEventListener('keydown', handleEscClose);\n  }\n\n  //обработчик клика по кнопке удаления карточки\n  const handleDeleteButtonClick = (card) => {\n    //открытие попапа подтверждения удаления\n    setIsConfirmDeleteFormOpen(true);\n    setCardToDelete(card);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования аватара\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа редактирования профиля\n  const handleEditProfileClick = () => {\n    setIsEditProfileFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа добавления карточки\n  const handleAddPlaceClick = () => {\n    setIsAddPlaceFormOpen(true);\n\n    setEscListener();\n  }\n\n  //обработчик открытия попапа с картинкой\n  const handleCardClick = (card) => {\n    setSelectedCard(card);\n\n    setEscListener();\n  }\n\n  //закрытие всех попапов\n  const closeAllPopups = () => {\n    setIsEditAvatarFormOpen(false);\n    setIsEditProfileFormOpen(false);\n    setIsAddPlaceFormOpen(false);\n    setIsConfirmDeleteFormOpen(false);\n    setIsInfoPopupOpen(false);\n    setSelectedCard(null);\n\n    removeEscListener();\n  }\n\n  //обработчик обновления инфы пользователя\n  const handleUpdateUser = (info) => {\n    setIsLoading(true);\n    const jwt = localStorage.getItem('jwt');\n    api.setUserInfo(info.name, info.about, jwt)\n      .then((info) => {\n        setCurrentUser(info);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //обработчик обновления аватара\n  const handleUpdateAvatar = (newAvatar) => {\n    setIsLoading(true);\n    const jwt = localStorage.getItem('jwt');\n    api.editAvatar(newAvatar.avatar, jwt)\n      .then((newAvatar) => {\n        setCurrentUser(newAvatar);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      })\n  }\n\n  //методы для авторизации и регистрации\n  const handleLogin = (email,password) => {\n    auth.authorize(email,password)\n      .then((data) => {\n        if(data.token) {\n          setCurrentEmail(email);\n          setIsLoggedIn(true);\n          history.push('/');\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  const handleLogout = () => {\n    setIsLoggedIn(false);\n    setIsHamburgerClicked(false);\n    setIsRegisterOpen(false);\n    localStorage.removeItem('jwt');\n  }\n\n  const handleRegister = (email, password) => {\n    auth.register(email, password)\n      .then((res) => {\n        if (res) {\n          setIsInfoPopupOpen(true);\n          setIsRegisterValid(true);\n          setIsRegisterOpen(false);\n          history.push('/sign-in');\n        } else {\n          setIsInfoPopupOpen(true);\n          setIsRegisterValid(false);\n        }\n      })\n      .catch((err) => {\n        setIsInfoPopupOpen(true);\n        setIsRegisterValid(false);\n        console.log(err);\n      });\n  }\n\n  const handleHamburgerClick = () => {\n    setIsHamburgerClicked(!isHamburgerClicked);\n  }\n\n  //для определения содержимого в Header\n  const handleRegisterOpen = () => {\n    setIsRegisterOpen(!isRegisterOpen);\n  }\n\n  //#endregion\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        {isHamburgerClicked && <HamburgerInfo email={currentEmail} handleLogout={handleLogout} />}\n        <Header handleHamburgerClick={handleHamburgerClick} isHamburgerClicked={isHamburgerClicked}\n          isRegisterOpen={isRegisterOpen} handleRegisterOpen={handleRegisterOpen}\n          handleLogout={handleLogout} isLoggedIn={isLoggedIn} email={currentEmail} />\n        <Switch>\n          <Route exact path=\"/sign-up\">\n            <Register handleRegisterOpen={handleRegisterOpen} handleRegister={handleRegister} />\n          </Route>\n          <Route exact path=\"/sign-in\">\n            <Login handleLogin={handleLogin} />\n          </Route>\n          <ProtectedRoute path=\"/\" component={Main} isLoggedIn={isLoggedIn} cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n            onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}\n            onCardLike={handleCardLike} onCardDelete={handleDeleteButtonClick} isLoading={isLoading} />\n        </Switch>\n        <Footer />\n\n        <InfoTooltip isOpen={isInfoPopupOpen} isValid={isRegisterValid} onClose={closeAllPopups}\n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <AddPlacePopup isOpen={isAddPlaceFormOpen} onClose={closeAllPopups}\n          onAddPlace={handleAddPlace} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ConfirmDeletePopup isOpen={isConfirmDeleteFormOpen} onClose={closeAllPopups}\n          onCardDelete={handleCardDelete} isLoading={isLoading} card={cardToDelete}\n          onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditAvatarPopup isOpen={isEditAvatarFormOpen} onClose={closeAllPopups}\n          onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <EditProfilePopup isOpen={isEditProfileFormOpen} onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser} isLoading={isLoading} onClick={handleCLosePopupByClickOnOverlay} />\n\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} onClick={handleCLosePopupByClickOnOverlay} />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=''>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}